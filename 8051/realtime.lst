C51 COMPILER V9.60.0.0   REALTIME                                                          02/06/2021 06:49:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE REALTIME
OBJECT MODULE PLACED IN .\realtime.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Lib\realtime.c OMF2 OPTIMIZE(8,SPEED) BROWSE DEBUG PRINT(.\realtime.l
                    -st) TABS(2) OBJECT(.\realtime.obj)

line level    source

   1          #include "main.h"
   2          #include "delay.h"
   3          #include "port.h"
   4          #include "realtime.h"
   5          #include "transport.h"
   6          
   7          /* start of DS1307 realtime*/
   8          
   9          /*-------------------------------------*-
  10            Ds1307_Init
  11            - Description
  12              Allow Ds1307 run
  13          -*-------------------------------------*/
  14          void Ds1307_Init()
  15          {
  16   1        unsigned char tmp;
  17   1        tmp = Ds1307_Read(0x00);
  18   1        tmp &= 0x7F;
  19   1        Ds1307_Write(0x00,tmp);   
  20   1      }
  21          
  22          /*-------------------------------------*-
  23            Ds1307_Write function
  24            - Description
  25              Write a byte into address
  26            - Parameters:
  27              add: Address
  28              dat: Data
  29          -*-------------------------------------*/
  30          void Ds1307_Write(unsigned char add, unsigned char dat)
  31          {
  32   1        Soft_I2c_Start();
  33   1        Soft_I2c_Write(0xD0);
  34   1        Soft_I2c_Write(add); 
  35   1        Soft_I2c_Write(dat); 
  36   1        Soft_I2c_Stop();
  37   1      }
  38          
  39          /*-------------------------------------*-
  40            Ds1307_Read function
  41            - Description
  42              Read a byte at address
  43            - Parameters
  44              add - Address
  45            - Return
  46              1 byte at Address
  47          -*-------------------------------------*/
  48          unsigned char Ds1307_Read(unsigned char add)
  49          {
  50   1        unsigned char dat;
  51   1        Soft_I2c_Start();
  52   1        Soft_I2c_Write(0xD0); 
  53   1        Soft_I2c_Write(add);
  54   1        Soft_I2c_Start(); 
C51 COMPILER V9.60.0.0   REALTIME                                                          02/06/2021 06:49:53 PAGE 2   

  55   1        Soft_I2c_Write(0xD1); 
  56   1        dat = Soft_I2c_Read(0);
  57   1        Soft_I2c_Stop();
  58   1        return dat;
  59   1      }
  60          
  61          /*-------------------------------------*-
  62            Ds1307_Read_Time
  63            - Description
  64              Get hour, minute, second in BCD format 
  65            - Paramaters
  66              &hour   -  
  67              &minute - 
  68              &second -  
  69              &mode - Mode 12/24h (12 or 24)
  70            - return mode 24/12
  71              0 - AM
  72              1 - PM
  73          -*-------------------------------------*/
  74          bit Ds1307_Read_Time(unsigned char * hour, unsigned char * minute, 
  75            unsigned char * second, unsigned char * mode)
  76          {
  77   1        unsigned char h_tmp, m_tmp, s_tmp;
  78   1        bit am_pm;
  79   1        Soft_I2c_Start();
  80   1        Soft_I2c_Write(0xD0); 
  81   1        Soft_I2c_Write(0x00);
  82   1        Soft_I2c_Start(); 
  83   1        Soft_I2c_Write(0xD1); 
  84   1        s_tmp = Soft_I2c_Read(1);
  85   1        m_tmp = Soft_I2c_Read(1);
  86   1        h_tmp = Soft_I2c_Read(0);
  87   1        Soft_I2c_Stop();
  88   1      
  89   1        s_tmp &= 0x7F;
  90   1        *second = (s_tmp>>4)*10+(s_tmp&0x0F);
  91   1        m_tmp &= 0x7F;
  92   1        *minute = (m_tmp>>4)*10+(m_tmp&0x0F);
  93   1      
  94   1        if(h_tmp & 0x40)    // Mode 12h
  95   1        {
  96   2          *mode = 12;
  97   2          if(h_tmp & 0x20)
  98   2          {
  99   3            am_pm = 1;    // PM
 100   3          }
 101   2          else
 102   2          {
 103   3            am_pm = 0;
 104   3          }
 105   2          h_tmp &= 0x1F;
 106   2          *hour = (h_tmp>>4)*10+(h_tmp&0x0F);
 107   2        }
 108   1        else
 109   1        {
 110   2          *mode = 24;
 111   2          h_tmp &= 0x3F;
 112   2          *hour = (h_tmp>>4)*10+(h_tmp&0x0F);
 113   2          if(*hour<12)
 114   2          {
 115   3            am_pm = 0;    // AM
 116   3          }
C51 COMPILER V9.60.0.0   REALTIME                                                          02/06/2021 06:49:53 PAGE 3   

 117   2          else
 118   2          {
 119   3            am_pm = 1;
 120   3          }
 121   2        } 
 122   1        return am_pm;
 123   1      }
 124          
 125          /*------------------------------------------------------------------*-
 126              Ds1307_Write_Time
 127            ---------------------------------------
 128              - Description
 129                Write Hour, minute, second, mode, am/pm into Ds1307
 130              - Parameters
 131                hour, minute, second in decimal format
 132                mode: 12/14
 133                apm: 0 - AM, 1 - PM
 134          -*------------------------------------------------------------------*/
 135          void Ds1307_Write_Time(unsigned char hour, unsigned minute, 
 136            unsigned char second, unsigned char mode, bit apm)
 137          {
 138   1        second = ((second/10)<<4)|(second%10);
 139   1        minute = ((minute/10)<<4)|(minute%10);
 140   1        hour   = ((hour  /10)<<4)|(hour  %10);
 141   1        if(mode==12)
 142   1        {
 143   2          hour |= 0x40;
 144   2          if(apm)   // PM
 145   2          {
 146   3            hour |= 0x20;
 147   3          }
 148   2        }
 149   1        Soft_I2c_Start();
 150   1        Soft_I2c_Write(0xD0);
 151   1        Soft_I2c_Write(0x00); 
 152   1        Soft_I2c_Write(second); 
 153   1        Soft_I2c_Write(minute);
 154   1        Soft_I2c_Write(hour);
 155   1        Soft_I2c_Stop();
 156   1      }
 157          
 158          /*-------------------------------------*-
 159            Ds1307_Read_Time
 160            - Description
 161              Read day, date, month, year from Ds1307
 162            - Parameters
 163              &date, &day, &month, &year
 164            -   
 165          -*-------------------------------------*/
 166          void Ds1307_Read_Date(unsigned char * day, unsigned char * date, 
 167            unsigned char * month, unsigned char * year)
 168          {
 169   1        Soft_I2c_Start();
 170   1        Soft_I2c_Write(0xD0); 
 171   1        Soft_I2c_Write(0x03);
 172   1        Soft_I2c_Start(); 
 173   1        Soft_I2c_Write(0xD1); 
 174   1        *day  = Soft_I2c_Read(1);
 175   1        *date = Soft_I2c_Read(1);
 176   1        *month= Soft_I2c_Read(1);
 177   1        *year = Soft_I2c_Read(0);
 178   1        Soft_I2c_Stop();
C51 COMPILER V9.60.0.0   REALTIME                                                          02/06/2021 06:49:53 PAGE 4   

 179   1        *day &= 0x07;
 180   1        *date &= 0x3F;
 181   1        *date = (*date>>4)*10 + (*date & 0x0F);
 182   1        *month &= 0x1F;
 183   1        *month = (*month>>4)*10 + (*month & 0x0F);
 184   1        *year = (*year>>4)*10 + (*year & 0x0F); 
 185   1      }
 186          
 187          /*-------------------------------------*-
 188            Ds1307_Write_Date
 189            - Description
 190              Write day, date, month, year into Ds1307
 191            - Parameters
 192              day, date, month, year
 193          -*-------------------------------------*/
 194          void Ds1307_Write_Date(unsigned char day, unsigned char date, 
 195            unsigned char month, unsigned char year)
 196          {
 197   1        date  = ((date/10)<<4)  | (date%10);
 198   1        month   = ((month/10)<<4) | (month%10);
 199   1        year  = ((year/10)<<4)  | (year%10);
 200   1      
 201   1        Soft_I2c_Start();
 202   1        Soft_I2c_Write(0xD0);
 203   1        Soft_I2c_Write(0x03); 
 204   1        Soft_I2c_Write(day); 
 205   1        Soft_I2c_Write(date);
 206   1        Soft_I2c_Write(month);
 207   1        Soft_I2c_Write(year);
 208   1        Soft_I2c_Stop();
 209   1      }
 210          
 211          /*-------------------------------------*-
 212            Ds1307_Write_Bytes
 213            - Description
 214              Write array of byte begin at address
 215            - Parameters
 216              add: Start Address
 217              buff: Pointer to Write Buffer
 218              len:  Number of byte to Write
 219          -*-------------------------------------*/
 220          void Ds1307_Write_Bytes(unsigned char add, unsigned char * buff,
 221            unsigned char len)
 222          {
 223   1        unsigned char i=0;
 224   1      
 225   1        Soft_I2c_Start();
 226   1        Soft_I2c_Write(0xD0);
 227   1        Soft_I2c_Write(add);
 228   1        for(i=0;i<len;i++)
 229   1        {    
 230   2          Soft_I2c_Write(buff[i]); 
 231   2        } 
 232   1        Soft_I2c_Stop();
 233   1      }
 234          
 235          /*-------------------------------------*-
 236            Ds1307_Read_Bytes
 237            - Description
 238              Read array of byte into buff at add
 239            - Parameters
 240              add: Start Address
C51 COMPILER V9.60.0.0   REALTIME                                                          02/06/2021 06:49:53 PAGE 5   

 241              buff: Pointer to Read Buffer
 242              len:  Number of byte to Read
 243          -*-------------------------------------*/
 244          void Ds1307_Read_Bytes(unsigned char add,unsigned char * buff,
 245            unsigned char len)
 246          {
 247   1        unsigned char i;
 248   1      
 249   1        Soft_I2c_Start();
 250   1        Soft_I2c_Write(0xD0); 
 251   1        Soft_I2c_Write(add);
 252   1        Soft_I2c_Start();
 253   1        Soft_I2c_Write(0xD1);
 254   1        for(i=0;i<len-1;i++)
 255   1        { 
 256   2          buff[i]  = Soft_I2c_Read(1);
 257   2        }
 258   1        buff[i]  = Soft_I2c_Read(0);
 259   1        Soft_I2c_Stop();
 260   1      }
 261          
 262          /* end of DS1307 realtime */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    905    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      52
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
